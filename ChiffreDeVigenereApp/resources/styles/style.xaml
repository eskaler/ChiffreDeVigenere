<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ChiffreDeVigenereApp.Resources.Styles" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">


    <SolidColorBrush x:Key="MaastrightBlue" Color="White" />
    <SolidColorBrush x:Key="TiffanyBlue" Color="#E4572E" />
    <SolidColorBrush x:Key="JellyBean" Color="#1D7874" />
    <SolidColorBrush x:Key="CeladonGreen" Color="White"/>

    <Style TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="Foreground" Value ="{StaticResource TiffanyBlue}"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="Foreground" Value ="{StaticResource TiffanyBlue}"/>
    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource TiffanyBlue}"/>
    </Style>


    <Style x:Key="LinkButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock TextDecorations="Underline">
                        <InlineUIContainer>
                            <ContentPresenter />
                        </InlineUIContainer>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Blue" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="FlatButtonStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent"/>

        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TiffanyBlue}"/>

        <Setter Property="Margin" Value="5 2 5 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="0">
                    <ContentControl Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource JellyBean}" />
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="{StaticResource CeladonGreen}" />
                <Setter Property="Foreground" Value="{StaticResource MaastrightBlue}" />
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

        
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TiffanyBlue}"/>
        <Setter Property="Background" Value="{StaticResource MaastrightBlue}"/>
        <Setter Property="Foreground" Value="{StaticResource JellyBean}"/>
        <Setter Property="Margin" Value="5 2 5 20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ResourceKey=JellyBean}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Background" Value="{StaticResource MaastrightBlue}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TiffanyBlue}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>


    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border Margin="2" Grid.Row="0" Background="{StaticResource MaastrightBlue}" BorderThickness="0" />
                            <ContentPresenter />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource MaastrightBlue}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="{StaticResource ResourceKey=MaastrightBlue}" Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Grid Height="14" Width="14">
                                <!--Define size of the Bullet-->
                                <!--The two borders-->
                                <Border x:Name="RadioOuter" Background="{StaticResource MaastrightBlue}" BorderBrush="{StaticResource TiffanyBlue}" BorderThickness="1" CornerRadius="6" />
                                <Border CornerRadius="3" Margin="4" x:Name="RadioMark" Background="{StaticResource JellyBean}" Visibility="Hidden" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <TextBlock Margin="3,1,0,0" FontSize="12"><InlineUIContainer>
                                <ContentPresenter />
                            </InlineUIContainer></TextBlock>
                    </BulletDecorator>
                    <!--If item is checked, trigger the visibility of the mark-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <!--If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting-->
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="{StaticResource TiffanyBlue}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>